package com.pets

import com.pets.models.Pet
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.annotation.Body
import io.micronaut.http.annotation.Consumes
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Get
import io.micronaut.http.annotation.PathVariable
import io.micronaut.http.annotation.Post
import javax.inject.Inject
import kotlin.Any
import kotlin.Array
import kotlin.String

@Controller
class PetsController @Inject constructor(
  private val service: PetsService
) {
  @Post(value = "/pets")
  @Consumes("application/json")
  fun createPets(@Body body: Array<Pet>, httpRequest: HttpRequest<Any>): HttpResponse<Any> {
    val response = service.createPets(body)
        			return when(response.status) {
        				com.pets.models.ResponseType.SUCCESS -> HttpResponse.ok(response.body as kotlin.String)
        				else -> HttpResponse.ok(response.body as com.pets.models.Error)
        			}
  }

  @Get(value = "/pets/{petId}")
  fun showPetById(@PathVariable petId: String, httpRequest: HttpRequest<Any>): HttpResponse<Any> {
    val response = service.showPetById(petId)
        			return when(response.status) {
        				com.pets.models.ResponseType.SUCCESS -> HttpResponse.ok(response.body as
            com.pets.models.Pet)
        				else -> HttpResponse.ok(response.body as com.pets.models.Error)
        			}
  }
}

interface PetsService {
  fun createPets(body: Array<Pet>): Any

  fun showPetById(petId: String): Any
}
